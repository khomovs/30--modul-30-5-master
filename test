import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.common.exceptions import TimeoutException

@pytest.fixture(scope="module")
def driver():
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    driver.implicitly_wait(10)
    yield driver
    driver.quit()


def test_check_pet_cards(driver):
    driver.get("https://petfriends.skillfactory.ru/all_pets")
    cards = driver.find_elements(By.CSS_SELECTOR, '.card')
    assert len(cards) > 0
    for card in cards:
        photo = card.find_element(By.TAG_NAME, 'img')
        name = card.find_element(By.CSS_SELECTOR, '.card-title').text
        age = card.find_element(By.CSS_SELECTOR, '.card-text').text
        assert photo.get_attribute('src') != ''
        assert len(name) > 0
        assert len(age) > 0
def test_check_pet_table(driver):
    driver.get("https://petfriends.skillfactory.ru/all_pets")

    # Явное ожидание наличия таблицы
    try:
        table = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "all_my_pets_table"))
        )
        rows = table.find_elements(By.TAG_NAME, "tr")
        assert len(rows) > 1

        # Явное ожидание наличия хотя бы одного имени питомца в таблице
        first_pet_name_cell = WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.XPATH, "//table[@id='all_my_pets_table']/tbody/tr[2]/td[1]"))
        )
        assert len(first_pet_name_cell.text) > 0


    except TimeoutException:
        pytest.fail("Таблица питомцев или имя питомца не загрузились за отведенное время.")
import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException

# Настройка неявного ожидания (implicitly_wait)
def setup_webdriver():
    self.driver = webdriver.Chrome('D/chrome-win64/chromedriver.exe')
    driver.implicitly_wait(10) # Ожидание 10 секунд для всех элементов
    return driver

@pytest.fixture(scope="module")
def driver():
    driver = setup_webdriver()
    yield driver
    driver.quit()
